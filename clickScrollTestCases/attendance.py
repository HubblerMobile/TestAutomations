from automation_support import button, adbCmd, printMsg, setUp, \
    variables
from automation_support import TClogIn
import os
import time
from localUiautomator.uiautomator import device


def action():
    s = variables.s
    arr = []
    resp = []
    try:
        adbCmd.stopApp("mobi.hubbler.app")
        adbCmd.launchApp("mobi.hubbler.app", "StartActivity")
        button.findText("Apps").click()
        print("-------attendance--------")
        print("--apps are loading successfully")
        button.findTextContain('Attendance').click()
        print("--attendance is opening successfully")
        time.sleep(1)
        button.deviceBack()
        print("--device back button is working successfully in attendance")
        button.findTextContain('Attendance').click()
        button.backAttendance().click()
        print("--app back button is working successfully in attendance")
        button.findTextContain('Attendance').click()
        button.selfHistory().click()
        print("--self history is opening successfully")
        button.backAttendance().click()
        print("--app back button is working successfully in slef history")
        button.selfHistory().click()
        time.sleep(1)
        button.deviceBack()
        print("--device back button is working successfully in self history")
        button.selfHistory().click()
        button.findTextContain("Not at work").click()
        print("--not at work tab is opening successfully")
        button.findTextContain("On Leave").click()
        print("--On leave tab is opening successfully")
        button.findTextContain("At work").click()
        print("--at work tab is opening successfully")
        button.previousDate().click()
        print("--previous month button clicked")
        button.nextDate().click()
        print("--next month button clicked")
        button.backAttendance().click()
        button.teamHistory().click()
        print("--self history is opening successfully in team history")
        button.backAttendance().click()
        print("--back button is working successfully in team history")
        button.teamHistory().click()
        time.sleep(1)
        button.deviceBack()
        print("--device back button is working successfully in team history")
        button.teamHistory().click()
        button.findTextContain("Not at work").click()
        print("--not at work tab is opening successfully")
        button.findTextContain("On Leave").click()
        print("--On leave tab is opening successfully")
        button.findTextContain("At work").click()
        print("--at work tab is opening successfully")
        button.previousDate().click()
        print("--previous date button clicked")
        button.nextDate().click()
        print("--next date button clicked")
        button.findTextContain("Not at work").click()
        button.callMessageOption().click()
        print("--Call-message option clicked")
        button.findTextContain('Call').click()
        print("--call button clicked")
        time.sleep(1)
        button.deviceBack()
        button.callMessageOption().click()
        button.findTextContain('Message').click()
        print("--message button clicked")
        time.sleep(1)
        button.deviceBack()
        button.locationFilter().click()
        print("--location filter opened")
        button.backAttendance().click()
        print("--app back button works successfully in location filter page")
        button.locationFilter().click()
        time.sleep(1)
        button.deviceBack()
        print("--device back button works successfully in location filter page")
        button.recycleView()[0].click()
        print("--subordinate card opens successfully")
        button.backAttendance().click()
        print("--app back button works successfully")
        button.recycleView()[0].click()
        time.sleep(1)
        button.deviceBack()
        print("--device back button works successfully")
        button.recycleView()[0].click()
        button.userHeader().click()
        print("--subordinate's profile opens successfully")
        time.sleep(1)
        button.deviceBack()
        resp.append(True)
        resp.append(printMsg.printSuccess(os.path.basename(__file__)))
    except Exception as e:
        #         button.takeScreenShort(os.path.basename(__file__))
        resp.append(False)
        resp.append(printMsg.printException(e, os.path.basename(__file__)))
    return resp


if __name__ == "__main__":
    action()
