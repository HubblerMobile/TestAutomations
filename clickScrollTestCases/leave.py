from automation_support import button, adbCmd, printMsg, setUp, \
    variables
from automation_support import TClogIn
import os
import time
from localUiautomator.uiautomator import device


def action():
    s = variables.s
    arr = []
    resp = []
    try:
        adbCmd.stopApp("mobi.hubbler.app")
        adbCmd.launchApp("mobi.hubbler.app", "StartActivity")
        print("\n\n")
        print("----------leave-------")
        button.findText("Apps").click()
        print("--apps are loading successfully")
        button.findTextContain('Leave').click()
        print("--Leave is opening successfully")
        time.sleep(1)
        button.deviceBack()
        print("--device back button is working successfully in leave")
        button.findTextContain('Leave').click()
        button.back().click()
        print("--app back is clicked in leave landing page")
        button.findTextContain('Leave').click()
        button.listView().fling.toBeginning()
        print("--pulled to refres in inbox")
        button.leaveFilter().click()
        print("--filter is opened in self view")
        button.appBack().click()
        print("--app back is clicked in inbox filter")
        button.leaveFilter().click()
        time.sleep(1)
        button.deviceBack()
        print("--device back button is clicked in inbox filter")
        button.listView().child_by_instance(1).click()
        print("--leave card opened in inbox")
        time.sleep(1)
        button.deviceBack()
        print("--device back button clicked in leave details page")
        button.listView().child_by_instance(1).click()
        button.back().click()
        print("--app back button is clicked in leave details page")
        button.leaveFilter().click()
        button.scrollView().scroll.to(text='Approved')
        print("--scrolled in filter to find Approved status")
        button.findTextContain('Approved').click()
        print("--approved status selected")
        button.findTextContain('Apply').click()
        print("--filter applied with approved status")
        button.listView().fling.toBeginning()
        print("--refresh to reset filter")
        button.teamViewLeave().click()
        print("--team view opened")
        time.sleep(1)
        button.deviceBack()
        print("--device back button is clicked in team view")
        button.teamViewLeave().click()
        button.back().click()
        print("--app back button is clicked in team view")
        button.teamViewLeave().click()
        button.listView().fling.toEnd()
        print("--scrolled till end in team view")
        button.leaveTeamViewSearch().click()
        print("--search opened in team view")
        button.enterText('Nikesh')
        print("--text entered in search box")
        time.sleep(2)
        button.leaveTeamViewSearchClear().click()
        print("--search key cleared")
        button.leaveTeamViewSearchClear().click()
        print("--search box closed")
        button.leaveFilter().click()
        print("--leave filter opened in team inbox")
        time.sleep(1)
        button.deviceBack()
        print("--device back button is clicked in team view filter")
        button.leaveFilter().click()
        button.appBack().click()
        button.leaveFilter().click()
        button.findTextContain('study').click()
        print("--study leave selected in filter")
        button.findTextContain("Apply").click()
        print("--filter applied")
        button.listView().fling.toBeginning()
        print("refreshed to remove filter")
        button.listView().child_by_instance(1).click()
        print("--leave card opened in team view")
        time.sleep(1)
        button.deviceBack()
        print("--device back button clicked in leave details page")
        button.listView().child_by_instance(1).click()
        button.backLeaveDetaislPage().click()
        print("--app back button clicked in leave details page")
        button.listView().child_by_instance(1).click()
        button.leaveDetailsUserHeader().click()
        print("--user profile opened from leave details page")
        time.sleep(1)
        button.deviceBack()
        resp.append(True)
        resp.append(printMsg.printSuccess(os.path.basename(__file__)))
    except Exception as e:
        #         button.takeScreenShort(os.path.basename(__file__))
        resp.append(False)
        resp.append(printMsg.printException(e, os.path.basename(__file__)))
    return resp


if __name__ == "__main__":
    action()
